#!/bin/bash

# === scripts ===
# recursivly set files and folders to be non-executable
function fixperms() {
  find ${1} -type d -exec chmod 755 {} +
  find ${1} -type f -exec chmod 644 {} +
}

# === general unix commands ===
# interactive rm instead of no prompt
alias sx="source ~/.bash_profile"
alias xx='vim ~/.bash_profile'
alias untargz='tar xvf'
alias rm='rm -i'
alias cp='cp -i'
alias ff="find . -name "
alias dirsize="du -sh"
alias l="ls -lh"
alias la="ls -lah"
alias hist="history"
alias dirsize="du -sh"
alias dirsizecurrent="echo 'Calculating...'; du -shc ./* | sort -rh"
alias diffleft="diff --changed-group-format='%<' --unchanged-group-format=''"
alias diffright="diff --changed-group-format='%>' --unchanged-group-format=''"
alias where="whereis" # test... seems whereis works when where doesnt exist
alias chexe='find . -maxdepth 1 -type f -print0 | xargs -0 chmod 644 >& /dev/null; find . -maxdepth 1 -type f \( -name "*.csh" -o -name "*.sh" -o -name "zoix.sim" -name "simv" \) -print0 | xargs -0 chmod 755 >& /dev/null'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
# alias dirsizecurrent="du -sh ./*"
# VVV maybe linux only? (no mac os)
# alias ls='ls --color=auto'

function tkdiff() {
  if [ "hash tkdiff" ]; then
    echo "ALIAS: Backgrounding this for you with &"
    $(which tkdiff) $@ &
  else
    echo "tkdiff not found or installed"
  fi
}

# multililne aliases
function golink() {
  if [ -n "$1" ]; then
    l=$(readlink $1);
    d=$(dirname $l);
    cd $d;
  else
    echo "usage: golink <symlink-file>"
    echo "  e.g. ${FUNCNAME[0]} ~/.vimrc"
  fi
}

function si() {
  if [ -n "$1" ]; then
    grep "$1" . -ri "${@:2}" --exclude-dir="node_modules";
  else
    echo "usage: ${FUNCNAME[0]} <search-term> [<args>]"
  fi
}

function sii() {
  if [ -n "$1" ]; then
    grep "$1" . -ri --include="$2" "${@:3}" --exclude-dir="node_modules";
  else
    echo "usage: ${FUNCNAME[0]} <search-term> <filter-pattern> [<args>]"
    echo "  e.g. ${FUNCNAME[0]} main *.c"
  fi
}

function cdf() {
  if [ -n "$1" ]; then
    cd $(dirname $1)
  else
    echo "usage: ${FUNCNAME[0]} <filepath>"
    echo "  e.g. ${FUNCNAME[0]} ~/personal-files/.vimrc"
  fi
}

